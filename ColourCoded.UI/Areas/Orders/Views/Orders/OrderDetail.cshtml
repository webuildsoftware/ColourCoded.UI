
@{
  ViewData["Title"] = "OrderDetail";
  Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
  #orderdetail {
    font-size: 11px
  }

  .validationLabel {
    color: red;
    font-size: 10px;
  }

  #main div {
    padding: 3px;
  }

    #main div span {
      font-size: 10px;
    }
</style>
<div class="row">
  <div class="col-md-6">
    <h4 class="page-header-sm">
      Add New Order
      <div class="pull-right">
        <input type="text" id="ordernoprefix" style="width:90px" placeholder="Enter Prefix" maxlength="10" class="form-control-header" />
        <input type="text" id="ordernoseed" style="width:50px" disabled="disabled" onkeypress="return false;" class="form-control-header" />
      </div>
    </h4>
  </div>
</div>
<div class="row">
  <div class="col-md-6">
    <div id="main">
      <div>
        <span>Item Description</span><br />
        <input type="text" id="product" placeholder="Enter item description" class="form-control-normal" />
      </div>
      <div>
        <span>Unit Price</span><br />
        <input type="text" id="unitprice" class="number form-control-small" placeholder="Enter unit price" />
      </div>
      <div>
        <span>Quantity</span><br />
        <input type="text" id="quantity" class="number form-control-small" placeholder="Enter quantity" />
      </div>
      <div>
        <span>Discount</span><br />
        <input type="text" id="discount" class="number form-control-small" placeholder="Enter discount" />
      </div>
      <div style="padding-bottom:10px; padding-top:10px;">
        <input id="lineitem" value="Add Item" type="button" class="btn-thin btn-success" />&nbsp;&nbsp;
        <input id="cancel" value="Cancel" type="button" class="btn-thin btn-default" />&nbsp;&nbsp;
        <input id="done" value="Next" type="button" class="btn-thin btn-success" data-toggle="modal" data-target="#ConfirmModal"/>&nbsp;&nbsp;
        <label id="validorder" class="validationLabel"></label>
      </div>
    </div>
  </div>
</div>
<div class="row">
  <div class="col-md-6">
    <table id="orderdetail" class="table table-bordered">
      <thead class="table-head">
        <tr>
          <td>Item Description</td>
          <td>Qty</td>
          <td>Price</td>
          <td>Discount</td>
          <td>Line Total</td>
        </tr>
      </thead>
      <tbody></tbody>
    </table>
  </div>
</div>

<!-- Confirm Popup -->
<div class="modal fade" id="ConfirmModal" tabindex="-1" role="dialog" aria-labelledby="ConfirmModalLabel" aria-hidden="true">
  <div class="modal-dialog" style="width:250px">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
        <h4 class="modal-title" id="ConfirmModalLabel">Are you sure?</h4>
      </div>
      <div class="modal-body">Any unsaved changes will be lost</div>
      <div class="modal-footer">
        <button type="button" class="btn-thin btn-primary" id="confirm">Yes</button>
        <button type="button" class="btn-thin btn-default" data-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>

@section Scripts{
  <script>
    var order = {
      "orderdetail": []
    };
    var vatrate = 0.0;
    var ordernoseed = 0;
    var queryString = location.href.split("?")[1];
    var orderId = 0;
    var orderNo = "";

    $(document).ready(function () {

      $.ajax({
        url: '@Url.Action("GetVatRate")',
        type: 'GET',
        success: function (data) {
          vatrate = data;
        },
        error: function (xhr, options, error) {
          alert("OOPS! The was an error processing your request - " + jQuery.parseJSON(xhr.responseText).message);
        }
      });

       $.ajax({
        url: '@Url.Action("GetOrderNoSeed")',
        type: 'GET',
        success: function (data) {
          ordernoseed = data;
          $("#ordernoseed").val(ordernoseed);
        },
        error: function (xhr, options, error) {
          alert("OOPS! The was an error processing your request - " + jQuery.parseJSON(xhr.responseText).message);
        }
      });

      // check if the view is in edit mode
      if (queryString != undefined) {
        // get order id from query string
        orderId = queryString.split("&")[0].split("=")[1];
        orderNo = queryString.split("&")[1].split("=")[1];

        // change header and update ordernoprefix
        $("#header").html("Edit Quote");
        $("#ordernoprefix").val(orderNo);

        $.ajax({
          url: '@Url.Action("GetOrderLineDetails")' + '?orderId=' + orderId,
          type: 'GET',
          success: function (lineitems) {
            ordernoseed = "";
            $("#ordernoseed").val(ordernoseed);
            $("#ordernoseed").attr("disabled", "disabled");
            // loop through order line details
            $.each(lineitems, function (index, lineitem) {
              order.orderdetail.push(
                {
                  "product": lineitem.itemDescription,
                  "quantity": Number(lineitem.quantity),
                  "unitprice": Number(lineitem.unitPrice),
                  "discount": Number(lineitem.discount),
                  "linetotal": Number(lineitem.lineTotal)
                });
            });
            updateOrderDetailGrid();
          },
          error: function (xhr, options, error) {
            alert("OOPS! The was an error processing your request - " + jQuery.parseJSON(xhr.responseText).message);
          }
        });
      }

    });

    $("#ordernoseed").change(function(event) {
      $("#ordernoseed").val(ordernoseed);
    });

    $("input[class='number form-control-small']").keyup(function(event) {
      var keyValue = $(this).val();

      if (!$.isNumeric(event.key))
        $(this).val(keyValue.replace(event.key, ""));

      if (event.keyCode == 13) {
        $("#lineitem").click();
      }
    });

    $("input[class='number form-control-small']").change(function(event) {
      if (!$.isNumeric($(this).val()))
        $(this).val("");
    });

    $("#lineitem").click(function () {
      var isValid = true;

      var product = $("#product");
      var quantity = $("#quantity");
      var unitprice = $("#unitprice");
      var discount = $("#discount");
      var linetotal = (quantity.val() * unitprice.val()) - discount.val();

      // refresh validation
      $("input[type='text']").removeClass("alert-danger");

      if (product.val() === "") { product.addClass("alert-danger"); isValid = false; }
      if (quantity.val() === "") { quantity.addClass("alert-danger"); isValid = false; }
      if (unitprice.val() === "") { unitprice.addClass("alert-danger"); isValid = false; }

      if (!isValid)
        return;

      var exists = false;

      $.each(order.orderdetail, function (index, lineitem) {
        // line item already exists check
        if (lineitem.product.toUpperCase() === product.val().toUpperCase() && lineitem.unitprice === Number(unitprice.val())) {
          lineitem.quantity = lineitem.quantity + Number(quantity.val());
          lineitem.linetotal = (lineitem.quantity * lineitem.unitprice) - lineitem.discount;
          exists = true;
        }
      });

      if (!exists) {
        order.orderdetail.push(
          {
            "product": product.val(),
            "quantity": Number(quantity.val()),
            "unitprice": Number(unitprice.val()),
            "discount": Number(discount.val()),
            "linetotal": Number(linetotal)
          });
      }

      updateOrderDetailGrid();
      product.focus(); product.val("");
      $("input[class='number form-control-small']").val("");
    });

    function updateOrderDetailGrid() {
      $("#orderdetail tbody").html("");
      var grid = $("#orderdetail tbody");
      var subtotal = 0.0;
      var vattotal = 0.0;
      var discount = 0.0;
      var ordertotal = 0.0;

      var exists = false;
      $.each(order.orderdetail, function (index, lineitem) {
        // sum totals
        subtotal += lineitem.linetotal;
        discount += lineitem.discount;

        // append to grid
        grid.append("<tr><td class='md-column' style='padding-left:7px'>" +
          lineitem.product +
          "</td>" +
          "<td align='center'>" +
          lineitem.quantity +
          "</td>" +
          "<td style='padding-right:5px' align='right'>" +
          lineitem.unitprice.toFixed(2) +
          "</td>" +
          "<td style='padding-right:5px' align='right'>" +
          lineitem.discount.toFixed(2) +
          "</td>" +
          "<td style='padding-right:5px' align='right'>" +
          lineitem.linetotal.toFixed(2) +
          "</td>" +
          "<td class='table-nonbordered-right'><button type='button' class='btn btn-danger btn-circle-sm' title='remove'><i class='fa fa-times' onclick='removeLineItem(" +
          index +
          ")'></i></button></td></tr> ");
          exists = true;
      });

      if (exists) {

        vattotal = subtotal * vatrate;
        ordertotal += subtotal + vattotal;

        //  Sub Total
        grid.append("<tr>" +
          "<td style='height:18px' colspan='3'></td>" +
          "<td align='right' style='padding-right:5px' ><strong>Sub-Total</strong></td>" +
          "<td align='right' style='padding-right:5px' ><strong>R " + subtotal.toFixed(2) + "</strong></td>" +
          "</tr>");

        // Discount Total
        grid.append("<tr>" +
          "<td style='height:18px' colspan='3'></td>" +
          "<td align='right' style='padding-right:5px' ><strong>Discount</strong></td>" +
          "<td align='right' style='padding-right:5px' ><strong>R " + discount.toFixed(2) + "</strong></td>" +
          "</tr>");

        // Vat Total
        grid.append("<tr>" +
          "<td style='height:18px' colspan='3'></td>" +
          "<td align='right' style='padding-right:5px' ><strong>VAT</strong></td>" +
          "<td align='right' style='padding-right:5px' ><strong>R " + vattotal.toFixed(2) + "</strong></td>" +
          "</tr>");

        // Order Total
        grid.append("<tr>" +
          "<td style='height:18px' colspan='3'></td>" +
          "<td align='right' style='padding-right:5px' ><strong>Total</strong></td>" +
          "<td align='right' style='padding-right:5px' ><strong>R " + ordertotal.toFixed(2) + "</strong></td>" +
          "</tr>");

        $("#validorder").html("");
      }
    }

    function removeLineItem(index) {
      order.orderdetail.splice(index, 1);
      updateOrderDetailGrid();
    }

    $("#confirm").click(function () {

      if (order.orderdetail.length == 0) {
        $("#validorder").html("Please add item(s).");
      }
      else {
        var orderNo = $("#ordernoprefix").val() + $("#ordernoseed").val();

        if (orderId == 0) {
          // perform the add of the new order
          $.ajax({
            url: '@Url.Action("AddOrder")',
            data: { orderNo: orderNo },
            type: 'POST',
            success: function (data) {
              // if success: send orderId and json orderdetail list to controller to add new  order detail
              var orderId = data;

              $.ajax({
                url: '@Url.Action("AddOrderDetail")',
                data: { orderId: orderId, inputModel: order.orderdetail },
                type: 'POST',
                success: function (validResult) {
                  // if success: route to confirmation screen
                  if (validResult.isValid) {
                    window.location.href = '@Url.Action("OrderCustomer")' + '?orderId=' + orderId + '&orderNo=' + orderNo ;
                  }
                  else {
                    $("#validorder").html("Error occured: " + validResult.messages[0].message);
                  }
                  // end if success
                },
                error: function (xhr, options, error) {
                  alert("OOPS! The was an error processing your request - " + jQuery.parseJSON(xhr.responseText).message);
                }
              });
              // end if success
            },
            error: function (xhr, options, error) {
              alert("OOPS! The was an error processing your request - " + jQuery.parseJSON(xhr.responseText).message);
            }
          });
        }
        else {
          // perform the edit of the order
          $.ajax({
            url: '@Url.Action("EditOrderNo")',
            data: { orderId: orderId, orderNo: orderNo },
            type: 'POST',
            success: function (data) {

              // if success: send orderId and json orderdetail list to controller to add new order detail
              $.ajax({
                url: '@Url.Action("AddOrderDetail")',
                data: { orderId: orderId, vatRate: vatrate, inputModel: order.orderdetail },
                type: 'POST',
                success: function (validResult) {
                  // if success: route to confirmation screen
                  if (validResult.isValid) {
                    window.location.href = '@Url.Action("OrderCustomer")' + '?orderId=' + orderId + '&orderNo=' + orderNo ;
                  }
                  else {
                    $("#validorder").html("Error occured: " + validResult.messages[0].message);
                  }
                  // end if success
                },
                error: function (xhr, options, error) {
                  alert("OOPS! The was an error processing your request - " + jQuery.parseJSON(xhr.responseText).message);
                }
              });
              // end if success
            },
            error: function (xhr, options, error) {
              alert("OOPS! The was an error processing your request - " + jQuery.parseJSON(xhr.responseText).message);
            }
          });
        }

      }
    });

    $("#cancel").click(function () {
      location.href = '@Url.Action("Index", "Orders", new { area = "Orders" })'
    });
  </script>
}
