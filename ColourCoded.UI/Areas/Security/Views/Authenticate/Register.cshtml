@model ColourCoded.UI.Areas.Security.Models.Login.AuthenticateViewModel;
@{
  ViewData["Title"] = "CC Invoice Registration";
}
<head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta name="description" content="">
  <meta name="author" content="">

  <link href="~/lib/font-awesome/css/font-awesome.css" rel="stylesheet" />
  <link href="~/lib/bootstrap/css/bootstrap.css" rel="stylesheet" />
  <link href="~/css/sb-admin-2.css" rel="stylesheet" />
  <link href="~/css/metisMenu.css" rel="stylesheet" />

  <script src="~/lib/jquery/dist/jquery.min.js"></script>
  <script src="~/lib/metismenu/metisMenu.min.js"></script>
  <script src="~/lib/theme/sb-admin-2.js"></script>
  <script src="~/lib/bootstrap/js/bootstrap.js"></script>

  <style>

    span button {
      height: 30px;
      width: 30px;
      padding: 6px 1px !important; 
    }

    #main div span {
      font-size: 10px;
    }
  </style>

</head>
<body>
  <div class="container">
    <div class="row">
      <div class="col-md-4 col-md-offset-4">
        <div class="register-panel panel panel-default">
          <div class="panel-heading" style="text-align:center;">
            <h3 class="panel-title">Register New User</h3>
          </div>
          <div id="main" class="panel-body" style="text-wrap:none;">
            @using (Html.BeginForm("Register", "Authenticate", FormMethod.Post, new { id = "formRegistration" }))
            {
              <div class="form-group input">
                <span>Username</span><br />
                <input id="username" name="username" placeholder="Username" type="text" maxlength="15" class="form-control" />
              </div>
              <div>
                <span>Password</span>
              </div>
              <div class="form-group input-group">
                <table>
                  <tr>
                    <td width="40%"><input id="password" name="password" placeholder="Password" type="password" class="form-control" /></td>
                    <td width="10%">
                      <span class="input-group-btn">
                        <button class="btn btn-default btnshow-password" type="button" tabindex="-100">
                          <i class="fa fa-eye show-password"></i>
                        </button>
                      </span>
                    </td>
                    <td width="40%"><input id="confirmPassword" name="confirmPassword" placeholder="Confirm Password" type="password" class="form-control" /></td>
                    <td width="10%">
                      <span class="input-group-btn">
                        <button class="btn btn-default btnshow-confirmPassword" type="button" tabindex="-200">
                          <i class="fa fa-eye show-confirmPassword"></i>
                        </button>
                      </span>
                    </td>
                  </tr>
                </table>
              </div>
              <div class="form-group">
                <span>First Name</span><br />
                <input id="firstName" name="firstName" placeholder="First Name" type="text" class="form-control" />
              </div>
              <div class="form-group">
                <span>Last Name</span><br />
                <input id="lastName" name="lastName" placeholder="Surname" type="text" class="form-control" />
              </div>
              <div class="form-group">
                <span>Email Address</span><br />
                <input id="emailAddress" name="emailAddress" placeholder="Email Address" type="text" class="form-control" />
              </div>
              <div>
                <input type="button" id="saveRegistration" value="Register" class="btn btn-lg btn-success btn-block" />
                <input type="button" value="Cancel" class="btn btn-lg btn-default btn-block" data-toggle="modal" data-target="#ConfirmModal" />
              </div>
              @Html.AntiForgeryToken();
            }
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Loader Modal -->
  <div class="modal fade" id="loader" tabindex="-1" role="dialog" aria-labelledby="loadMeLabel">
    <div class="loader-dialog modal-xsm" role="document">
      <div class="modal-content">
        <div class="loader"></div>
      </div>
    </div>
  </div>
</body>

<!-- Confirm Cancel Modal -->
<div class="modal fade" id="ConfirmModal" tabindex="-1" role="dialog" aria-labelledby="ConfirmModalLabel" aria-hidden="true">
  <div class="loader-dialog" style="width:250px">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true" id="closeconfirm">&times;</button>
        <h4 class="modal-title" id="ConfirmModalLabel">Cancel Registration</h4>
      </div>
      <div class="modal-body">Are you sure?</div>
      <div class="modal-footer">
        <button type="button" class="btn-thin btn-primary" id="cancel">Yes</button>
        <button type="button" class="btn-thin btn-default" data-dismiss="modal" >Close</button>
      </div>
    </div>
  </div>
</div>

<script>
  $('.btnshow-password').click(function (event) {
    $('.show-password').click();
  });

  $('.btnshow-confirmPassword').click(function (event) {
    $('.show-confirmPassword').click();
  });

  // TODO: add ie 8/7 support, what browsers didnt support this check market share
  $('.show-password').click(function (event) {

    if ($('#password').attr('type') === 'password') {
      $('#password').attr('type', 'text');
      $(this).removeClass('fa fa-eye');
      $(this).addClass('fa fa-eye-slash');
    } else {
      $('#password').attr('type', 'password');
      $(this).removeClass('fa fa-eye-slash');
      $(this).addClass('fa fa-eye');
    }
    return false;
  });

  $('.show-confirmPassword').click(function (event) {

    if ($('#confirmPassword').attr('type') === 'password') {
      $('#confirmPassword').attr('type', 'text');
      $(this).removeClass('fa fa-eye');
      $(this).addClass('fa fa-eye-slash');
    } else {
      $('#confirmPassword').attr('type', 'password');
      $(this).removeClass('fa fa-eye-slash');
      $(this).addClass('fa fa-eye');
    }
    return false;
  });

  $('#cancel').click(function () {
    window.location.href = '@Url.Action("Index")';
  });

  $('#saveRegistration').click(function () {
    if (validForm()) {
      GlobalLoader(true);
      $('#formRegistration').submit();
    }
  });

  $(document).ready(function () {
    $('input[type=text]').keyup(function () {
      $(this).removeClass('alert-danger');
    });

    $('input[type=password]').keyup(function () {
      $(this).removeClass('alert-danger');
    });

    $('input[type=password]').change(function () {
      var length = $(this).val().length;

      if (length < 6) {
        $(this).addClass("alert-danger");
        alert("Minimum length 6 characters")
      }

    });

    $('#username').change(function () {
      var username = $(this).val();

      if (username.length == 0) {
        return;
      }

      if (username.length < 6) {
        $(this).addClass("alert-danger");
        alert("Minimum length 6 characters")
        return;
      }

      // call get method with validation result for availability
      if (validateUsername(username)) {

        $.ajax({
          url: '@Url.Action("ValidateUser")' + '?username=' + username,
          type: 'GET',
          success: function (data) {

            if (data.isValid) {
              $('#username').removeClass("alert-danger");
              $('#username').attr("isvalid", "true");
            }
            else {
              $('#username').addClass("alert-danger");
              $('#username').attr("isvalid", "false");
              alert(data.messages[0].message);
            }

          },
          error: function (xhr, options, error) {
            alert("OOPS! The was an error processing your request - " + jQuery.parseJSON(xhr.responseText).message);
          }
        });
      }
      else {
        $(this).addClass("alert-danger");
        alert("Invalid username");
      }

    });

    $('#emailAddress').change(function () {
      var emailAddress = $(this).val();

      if (!validateEmail($(this).val())) {
        $(this).addClass("alert-danger");
        alert("Invalid email address");
      }
      else {
        $.ajax({
          url: '@Url.Action("ValidateEmail")' + '?emailAddress=' + emailAddress,
          type: 'GET',
          success: function (data) {

            if (data.isValid) {
              $('#emailAddress').removeClass("alert-danger");
              $('#emailAddress').attr("isvalid", "true");
            }
            else {
              $('#emailAddress').addClass("alert-danger");
              $('#emailAddress').attr("isvalid", "false");
              alert(data.messages[0].message);
            }

          },
          error: function (xhr, options, error) {
            alert("OOPS! The was an error processing your request - " + jQuery.parseJSON(xhr.responseText).message);
          }
        });
      }
    });

  });

  function validForm() {
    var isValid = true;

    $.each($('input[type=text]'), function (index, control) {
      if ($(control).val().length === 0) {
        $(control).addClass("alert-danger");
        isValid = false;
      }
    });

    $.each($('input[type=password]'), function (index, control) {
      if ($(control).val().length === 0) {
        $(control).addClass("alert-danger");
        isValid = false;
      }
    });

    if ($("#confirmPassword").val() !== $("#password").val()) {
      alert("Passwords must match");

      $("#confirmPassword").addClass("alert-danger");
      $("#password").addClass("alert-danger");

      isValid = false;
    }

    if ($('#username').attr("isvalid") !== "true") {
      $('#username').addClass("alert-danger");
      isValid = false;
    }

    if ($('#emailAddress').attr("isvalid") !== "true") {
      $('#emailAddress').addClass("alert-danger");
      isValid = false;
    }

    return isValid;
  }

  function validateEmail(email) {
    var pattern = /^[a-zA-Z0-9\-_]+(\.[a-zA-Z0-9\-_]+)*@@[a-z0-9]+(\-[a-z0-9]+)*(\.[a-z0-9]+(\-[a-z0-9]+)*)*\.[a-z]{2,4}$/;
    return pattern.test(email);
  }

  function validateUsername(username) {
    var pattern = /^[a-z0-9_-]{6,15}$/;
    return pattern.test(username);
  }

  function GlobalLoader(visible) {

    if (visible) {
      $("#loader").modal({
        backdrop: "static", //remove ability to close modal with click
        keyboard: false, //remove option to close with keyboard
        show: true //Display loader!
      });
    }
    else {
      $("#loader").modal("hide");
    }

  }
</script>